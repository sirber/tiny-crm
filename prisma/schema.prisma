generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  user
  admin
}

model User {
  id        String     @id @default(uuid()) @db.Uuid
  email     String     @unique
  name      String
  password  String
  role      UserRole   @default(user)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  deletedAt DateTime?
  products  Product[]
  customers Customer[]
  contacts  Contact[]
  prospects Prospect[]
}

model Contact {
  id        String       @id @default(uuid()) @db.Uuid
  userId    String       @db.Uuid
  User      User         @relation(fields: [userId], references: [id])
  name      String
  email     String       @unique
  phone     String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now()) @updatedAt
  deletedAt DateTime?
}

model Prospect {
  id        String       @id @default(uuid()) @db.Uuid
  userId    String       @db.Uuid
  User      User         @relation(fields: [userId], references: [id])
  name      String
  email     String       @unique
  phone     String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now()) @updatedAt
  deletedAt DateTime?
}

model Customer {
  id        String       @id @default(uuid()) @db.Uuid
  userId    String       @db.Uuid
  User      User         @relation(fields: [userId], references: [id])
  name      String
  email     String       @unique
  phone     String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now()) @updatedAt
  deletedAt DateTime?
  bills     Bill[]
}

model Product {
  id          String        @id @default(uuid()) @db.Uuid
  userId      String        @db.Uuid
  User        User          @relation(fields: [userId], references: [id])
  name        String
  code        String
  price       Float
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now()) @updatedAt
  deletedAt   DateTime?
  BillProduct BillProduct[]
}

model Bill {
  id         String        @id @default(uuid()) @db.Uuid
  customerId String        @db.Uuid
  Customer   Customer      @relation(fields: [customerId], references: [id])
  taxes1     Float
  taxes2     Float
  total      Float
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @default(now()) @updatedAt
  deletedAt  DateTime?
  products   BillProduct[]
}

model BillProduct {
  id        String  @id @default(uuid()) @db.Uuid
  billId    String  @db.Uuid
  Bill      Bill    @relation(fields: [billId], references: [id])
  productId String  @db.Uuid
  Product   Product @relation(fields: [productId], references: [id])
  price     Float
  quantity  Int
}
