generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  user
  admin
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String
  password  String
  role      UserRole   @default(user)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  deletedAt DateTime?
  products  Product[]
  customers Customer[]
  contacts  Contact[]
  prospects Prospect[]
}

model Contact {
  id        Int       @id @default(autoincrement())
  userId    Int
  User      User      @relation(fields: [userId], references: [id])
  name      String
  email     String    @unique
  phone     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?
}

model Prospect {
  id        Int       @id @default(autoincrement())
  userId    Int
  User      User      @relation(fields: [userId], references: [id])
  name      String
  email     String    @unique
  phone     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?
}

model Customer {
  id        Int       @id @default(autoincrement())
  userId    Int
  User      User      @relation(fields: [userId], references: [id])
  name      String
  email     String    @unique
  phone     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?
  bills     Bill[]
}

model Product {
  id          Int           @id @default(autoincrement())
  userId      Int
  User        User          @relation(fields: [userId], references: [id])
  name        String
  code        String
  price       Float
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now()) @updatedAt
  deletedAt   DateTime?
  BillProduct BillProduct[]
}

model Bill {
  id         Int           @id @default(autoincrement())
  customerId Int
  Customer   Customer      @relation(fields: [customerId], references: [id])
  taxes1     Float
  taxes2     Float
  total      Float
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @default(now()) @updatedAt
  deletedAt  DateTime?
  products   BillProduct[]
}

model BillProduct {
  id        Int     @id @default(autoincrement())
  billId    Int
  Bill      Bill    @relation(fields: [billId], references: [id])
  productId Int
  Product   Product @relation(fields: [productId], references: [id])
  price     Float
  quantity  Int
}
